{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rick\\\\MIT Work\\\\Capstone\\\\pages\\\\restaurant.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from \"react\";\nimport Cart from \"../components/cart\";\nimport { ApolloProvider, ApolloClient, HttpLink, InMemoryCache } from \"@apollo/client\";\nimport DishesList from \"../components/dishesList\";\nimport { InputGroup, InputGroupAddon, Input, Row, Col } from \"reactstrap\";\nimport AppContext from \"../components/context\";\n\nfunction Home() {\n  _s();\n\n  var API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  console.log(\"URL: \".concat(API_URL));\n\n  var _useState = useState(\"\"),\n      query = _useState[0],\n      setQuery = _useState[1];\n\n  var link = new HttpLink({\n    uri: \"\".concat(API_URL, \"/graphql\")\n  });\n  var cache = new InMemoryCache();\n  var client = new ApolloClient({\n    link: link,\n    cache: cache\n  });\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem,\n      cart = _useContext.cart,\n      restaurant = _useContext.restaurant;\n\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, restaurant.name), __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \" Search \"), __jsx(Input, {\n    onChange: function onChange(e) {\n      return setQuery(e.target.value.toLocaleLowerCase());\n    },\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(DishesList, {\n    search: query,\n    restId: restaurant.id,\n    value: {\n      addItem: addItem\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(Cart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \" \"))));\n}\n\n_s(Home, \"VEXeUOfuEXrlGdmD64ioWGligpg=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Rick/MIT Work/Capstone/pages/restaurant.js"],"names":["React","useContext","useState","Cart","ApolloProvider","ApolloClient","HttpLink","InMemoryCache","DishesList","InputGroup","InputGroupAddon","Input","Row","Col","AppContext","Home","API_URL","process","env","NEXT_PUBLIC_API_URL","console","log","query","setQuery","link","uri","cache","client","addItem","cart","restaurant","name","e","target","value","toLocaleLowerCase","id"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,QAHF,EAIEC,aAJF,QAKO,gBALP;AAMA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,KAAtC,EAA6CC,GAA7C,EAAkDC,GAAlD,QAA6D,YAA7D;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,uBAAnD;AACAC,EAAAA,OAAO,CAACC,GAAR,gBAAoBL,OAApB;;AAFc,kBAGYd,QAAQ,CAAC,EAAD,CAHpB;AAAA,MAGPoB,KAHO;AAAA,MAGAC,QAHA;;AAId,MAAMC,IAAI,GAAG,IAAIlB,QAAJ,CAAa;AAAEmB,IAAAA,GAAG,YAAKT,OAAL;AAAL,GAAb,CAAb;AACA,MAAMU,KAAK,GAAG,IAAInB,aAAJ,EAAd;AACA,MAAMoB,MAAM,GAAG,IAAItB,YAAJ,CAAiB;AAAEmB,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,KAAK,EAALA;AAAR,GAAjB,CAAf;;AANc,oBAOwBzB,UAAU,CAACa,UAAD,CAPlC;AAAA,MAONc,OAPM,eAONA,OAPM;AAAA,MAOGC,IAPH,eAOGA,IAPH;AAAA,MAOSC,UAPT,eAOSA,UAPT;;AASd,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,UAAU,CAACC,IAAhB,CADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,KAAD;AACE,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOT,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,iBAAf,EAAD,CAAf;AAAA,KADZ;AAEE,IAAA,KAAK,EAAEb,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,EAYE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,MAAC,UAAD;AAAY,IAAA,MAAM,EAAEA,KAApB;AAA2B,IAAA,MAAM,EAAEQ,UAAU,CAACM,EAA9C;AAAkD,IAAA,KAAK,EAAE;AAAER,MAAAA,OAAO,EAAPA;AAAF,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,CADF,EAIA,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA,CAJA,CAZF,CADF;AAuBD;;GAhCQb,I;;KAAAA,I;AAiCT,eAAeA,IAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport Cart from \"../components/cart\";\nimport {\n  ApolloProvider,\n  ApolloClient,\n  HttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\nimport DishesList from \"../components/dishesList\";\nimport { InputGroup, InputGroupAddon, Input, Row, Col } from \"reactstrap\";\nimport AppContext from \"../components/context\";\n\nfunction Home() {\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  console.log(`URL: ${API_URL}`);\n  const [query, setQuery] = useState(\"\");\n  const link = new HttpLink({ uri: `${API_URL}/graphql` });\n  const cache = new InMemoryCache();\n  const client = new ApolloClient({ link, cache });\n  const { addItem, cart, restaurant } = useContext(AppContext);\n\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"search\">\n        <h2>{restaurant.name}</h2>\n        <InputGroup>\n          <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n          <Input\n            onChange={(e) => setQuery(e.target.value.toLocaleLowerCase())}\n            value={query}\n          />\n        </InputGroup>\n        <br></br>\n      </div>\n      <Row>\n        <Col>\n      <DishesList search={query} restId={restaurant.id} value={{ addItem }} />\n      </Col>\n      <Col>\n      <Cart> </Cart>\n      </Col>\n      </Row>\n    </ApolloProvider>\n  );\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}