{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Rick\\\\MIT Work\\\\Capstone\\\\pages\\\\_app.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState } from \"react\";\nimport Head from \"next/head\";\nimport AppContext from \"../components/context\";\nimport Layout from \"../components/layout\";\nimport Cookie from \"js-cookie\";\n\nfunction MyApp(props) {\n  _s();\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(0),\n      restaurant = _useState2[0],\n      setRestaurant = _useState2[1];\n\n  var _useState3 = useState({\n    items: [],\n    total: 0\n  }),\n      cart = _useState3[0],\n      setCart = _useState3[1]; //const [state, setState] = useState({cart:cart});\n\n\n  var Component = props.Component,\n      pageProps = props.pageProps;\n\n  var addItem = function addItem(item) {\n    var items = cart.items; //check for item already in cart\n    //if not in cart, add item if item is found increase quanity ++\n\n    var foundItem = true;\n\n    if (items.length > 0) {\n      foundItem = items.find(function (i) {\n        return i.id === item.id;\n      });\n      if (!foundItem) foundItem = false;\n    } else {\n      foundItem = false;\n    }\n\n    console.log(\"Found Item value: \".concat(JSON.stringify(foundItem))); // if item is not new, add to cart, set quantity to 1\n\n    if (!foundItem) {\n      //set quantity property to 1\n      var temp = JSON.parse(JSON.stringify(item));\n      temp.quantity = 1;\n      var newCart = {\n        items: [].concat(_toConsumableArray(cart.items), [temp]),\n        total: cart.total + item.price\n      };\n      setCart({\n        newCart: newCart\n      });\n      console.log(\"Total items: \".concat(JSON.stringify(newCart)));\n    } else {\n      // we already have it so just increase quantity ++\n      console.log(\"Total so far:  \".concat(cart.total));\n      newCart = {\n        items: items.map(function (item) {\n          if (item.id === foundItem.id) {\n            return Object.assign({}, item, {\n              quantity: item.quantity + 1\n            });\n          } else {\n            return item;\n          }\n        }),\n        total: cart.total + item.price\n      };\n    }\n\n    setCart({\n      newCart: newCart\n    }); // problem is this is not updated yet\n\n    console.log(\"state reset to cart:\".concat(JSON.stringify(state)));\n  };\n\n  var removeItem = function removeItem(item) {\n    var items = cart.items; //check for item already in cart\n\n    var foundItem = items.find(function (i) {\n      return i.id === item.id;\n    });\n\n    if (foundItem.quantity > 1) {\n      var newCart = {\n        items: items.map(function (item) {\n          if (item.id === foundItem.id) {\n            return Object.assign({}, item, {\n              quantity: item.quantity - 1\n            });\n          } else {\n            return item;\n          }\n        }),\n        total: cart.total - item.price\n      }; //console.log(`NewCart after remove: ${JSON.stringify(newCart)}`)\n    } else {\n      // only 1 in the cart so remove the whole item\n      console.log(\"Try remove item \".concat(JSON.stringify(foundItem)));\n      var index = items.findIndex(function (i) {\n        return i.id === foundItem.id;\n      });\n      items.splice(index, 1);\n      var newCart = {\n        items: items,\n        total: cart.total - item.price\n      };\n    }\n\n    setCart({\n      newCart: newCart\n    });\n  };\n\n  return __jsx(AppContext.Provider, {\n    value: {\n      cart: cart,\n      setCart: setCart,\n      addItem: addItem,\n      removeItem: removeItem,\n      isAuthenticated: false,\n      user: user,\n      setUser: setUser,\n      restaurant: restaurant,\n      setRestaurant: setRestaurant\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\",\n    integrity: \"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\",\n    crossOrigin: \"anonymous\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })), __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }))));\n}\n\n_s(MyApp, \"Vqzweq3flyFqkHu2uM4Gm1A2lJc=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/Rick/MIT Work/Capstone/pages/_app.js"],"names":["useContext","useState","Head","AppContext","Layout","Cookie","MyApp","props","user","setUser","restaurant","setRestaurant","items","total","cart","setCart","Component","pageProps","addItem","item","foundItem","length","find","i","id","console","log","JSON","stringify","temp","parse","quantity","newCart","price","map","Object","assign","state","removeItem","index","findIndex","splice","isAuthenticated"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport Head from \"next/head\";\nimport AppContext from \"../components/context\";\nimport Layout from \"../components/layout\"\nimport Cookie from \"js-cookie\"\n\n\nfunction MyApp(props){\n  const [user, setUser] = useState(null);\n  const [restaurant, setRestaurant] = useState(0);\n  const [cart, setCart] = useState({\n    items:[], \n    total:0\n  });\n  //const [state, setState] = useState({cart:cart});\n  const { Component, pageProps } = props;\n  \n\n  const addItem = (item) => {\n    let { items } = cart;\n    //check for item already in cart\n    //if not in cart, add item if item is found increase quanity ++\n    let foundItem = true;\n    if(items.length > 0){\n      foundItem = items.find((i) => i.id === item.id);\n     \n      if(!foundItem) foundItem = false;\n    }\n    else{\n      foundItem = false;\n    }\n    console.log(`Found Item value: ${JSON.stringify(foundItem)}`)\n    // if item is not new, add to cart, set quantity to 1\n    if (!foundItem) {\n      //set quantity property to 1\n    \n      let temp = JSON.parse(JSON.stringify(item));\n      temp.quantity = 1;\n      var newCart = {\n          items: [...cart.items,temp],\n          total: cart.total + item.price,\n      }\n      setCart({newCart})\n      console.log(`Total items: ${JSON.stringify(newCart)}`)\n    } else {\n      // we already have it so just increase quantity ++\n      console.log(`Total so far:  ${cart.total}`)\n      newCart= {\n          items: items.map((item) =>{\n            if(item.id === foundItem.id){\n              return Object.assign({}, item, { quantity: item.quantity + 1 })\n             }else{\n            return item;\n          }}),\n          total: cart.total + item.price,\n        }\n    }\n    setCart({newCart});  // problem is this is not updated yet\n    console.log(`state reset to cart:${JSON.stringify(state)}`)\n     \n  };\n  const removeItem = (item) => {\n    let { items } = cart;\n    //check for item already in cart\n    const foundItem = items.find((i) => i.id === item.id);\n    if (foundItem.quantity > 1) {\n      var newCart = {\n        items: items.map((item) =>{\n        if(item.id === foundItem.id){\n          return Object.assign({}, item, { quantity: item.quantity - 1 })\n         }else{\n        return item;\n      }}),\n      total: cart.total - item.price,\n      }\n      //console.log(`NewCart after remove: ${JSON.stringify(newCart)}`)\n    } else { // only 1 in the cart so remove the whole item\n      console.log(`Try remove item ${JSON.stringify(foundItem)}`)\n      const index = items.findIndex((i) => i.id === foundItem.id);\n      items.splice(index, 1);\n      var newCart= { items: items, total: cart.total - item.price } \n    }\n    setCart({newCart});\n  }\n\n  return (\n    <AppContext.Provider value={{cart, setCart, addItem, removeItem, isAuthenticated:false, user, setUser, restaurant, setRestaurant}}>\n      <Head>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"\n          integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n          crossOrigin=\"anonymous\"\n        />\n      </Head>\n    \n      <Layout>\n          <Component {...pageProps} />\n      </Layout>\n\n    </AppContext.Provider>\n  );\n  \n}\n\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}